{"ast":null,"code":"import { DashboardService } from '../../services/dashboard.service';\nimport { FormBuilder } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/dashboard.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction DashboardComponent_option_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const b_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", b_r3._id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(b_r3.barberName);\n  }\n}\nfunction DashboardComponent_tr_46_li_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const s_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(s_r7);\n  }\n}\nfunction DashboardComponent_tr_46_li_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const p_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(p_r8);\n  }\n}\nfunction DashboardComponent_tr_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\")(7, \"ul\");\n    i0.ɵɵtemplate(8, DashboardComponent_tr_46_li_8_Template, 2, 1, \"li\", 11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"td\")(10, \"ul\");\n    i0.ɵɵtemplate(11, DashboardComponent_tr_46_li_11_Template, 2, 1, \"li\", 11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"td\");\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const txn_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(3, 8, txn_r4.date, \"dd/MM/yyyy\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(txn_r4.barberName);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", txn_r4.serviceNames);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", txn_r4.productNames);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(txn_r4.serviceAmount);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(txn_r4.totalProductAmount);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(txn_r4.serviceAmount + txn_r4.totalProductAmount);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(txn_r4.paymentMode);\n  }\n}\nfunction DashboardComponent_button_47_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_button_47_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.loadMore());\n    });\n    i0.ɵɵtext(1, \"Load More\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(dashboardService, fb) {\n      this.dashboardService = dashboardService;\n      this.fb = fb;\n      this.transactions = [];\n      this.servicesMap = new Map();\n      this.productsMap = new Map();\n      this.barbersMap = new Map();\n      this.limit = 10;\n      this.skip = 0;\n      this.hasMore = true;\n      this.summaryData = {};\n      this.filtersForm = this.fb.group({\n        dateFrom: [''],\n        dateTo: [''],\n        barber: ['']\n      });\n    }\n    ngOnInit() {\n      this.loadMetadata();\n      this.loadTransactions();\n    }\n    loadMetadata() {\n      this.dashboardService.getServices().subscribe(res => {\n        res.forEach(s => this.servicesMap.set(s._id, s.serviceName));\n      });\n      this.dashboardService.getProducts().subscribe(res => {\n        res.forEach(p => this.productsMap.set(p._id, p.productName));\n      });\n      this.dashboardService.getBarbers().subscribe(res => {\n        res.forEach(b => this.barbersMap.set(b._id, b.name));\n      });\n    }\n    loadTransactions() {\n      const {\n        dateFrom,\n        dateTo,\n        barber\n      } = this.filtersForm.value;\n      this.dashboardService.getTransactions(this.skip, this.limit, dateFrom, dateTo, barber).subscribe(res => {\n        this.transactions.push(...res);\n        this.skip += this.limit;\n        if (res.length < this.limit) this.hasMore = false;\n        this.calculateSummary();\n      });\n    }\n    loadMore() {\n      this.loadTransactions();\n    }\n    calculateSummary() {\n      const filtered = this.transactions;\n      const serviceIncome = filtered.reduce((sum, t) => sum + t.serviceAmount, 0);\n      const productCost = filtered.reduce((sum, t) => sum + (t.totalProductAmount || 0), 0);\n      const barberEarnings = {};\n      filtered.forEach(t => {\n        const barber = t.barber || 'Unknown';\n        if (!barberEarnings[barber]) barberEarnings[barber] = {\n          count: 0,\n          serviceAmount: 0,\n          productAmount: 0\n        };\n        barberEarnings[barber].count++;\n        barberEarnings[barber].serviceAmount += t.serviceAmount;\n        barberEarnings[barber].productAmount += t.totalProductAmount || 0;\n      });\n      this.summaryData = {\n        serviceIncome,\n        productCost,\n        netIncome: serviceIncome - productCost,\n        barberEarnings: Object.entries(barberEarnings).map(([key, val]) => ({\n          barber: this.barbersMap.get(key) || key,\n          ...val,\n          commission: ((val.serviceAmount - val.productAmount) * 0.5).toFixed(2)\n        }))\n      };\n    }\n    getServiceNames(ids) {\n      return ids.map(id => this.servicesMap.get(id) || id).join(', ');\n    }\n    getProductNames(ids) {\n      return ids.map(id => this.productsMap.get(id) || id).join(', ');\n    }\n    static {\n      this.ɵfac = function DashboardComponent_Factory(t) {\n        return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.DashboardService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: DashboardComponent,\n        selectors: [[\"app-dashboard\"]],\n        decls: 48,\n        vars: 7,\n        consts: [[1, \"dashboard-container\"], [1, \"filter-form\", 3, \"formGroup\", \"ngSubmit\"], [\"type\", \"date\", \"formControlName\", \"fromDate\"], [\"type\", \"date\", \"formControlName\", \"toDate\"], [\"formControlName\", \"barber\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\"], [1, \"summary-cards\"], [1, \"card\"], [1, \"table-wrapper\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"load-more\", 3, \"click\", 4, \"ngIf\"], [3, \"value\"], [1, \"load-more\", 3, \"click\"]],\n        template: function DashboardComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n            i0.ɵɵtext(2, \"Transaction Dashboard\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"form\", 1);\n            i0.ɵɵlistener(\"ngSubmit\", function DashboardComponent_Template_form_ngSubmit_3_listener() {\n              return ctx.applyFilters();\n            });\n            i0.ɵɵelementStart(4, \"label\");\n            i0.ɵɵtext(5, \" From: \");\n            i0.ɵɵelement(6, \"input\", 2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"label\");\n            i0.ɵɵtext(8, \" To: \");\n            i0.ɵɵelement(9, \"input\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(10, \"label\");\n            i0.ɵɵtext(11, \" Barber: \");\n            i0.ɵɵelementStart(12, \"select\", 4)(13, \"option\", 5);\n            i0.ɵɵtext(14, \"All\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(15, DashboardComponent_option_15_Template, 2, 2, \"option\", 6);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(16, \"button\", 7);\n            i0.ɵɵtext(17, \"Apply\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(18, \"div\", 8)(19, \"div\", 9);\n            i0.ɵɵtext(20);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(21, \"div\", 9);\n            i0.ɵɵtext(22);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(23, \"div\", 9);\n            i0.ɵɵtext(24);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(25, \"div\", 10)(26, \"table\")(27, \"thead\")(28, \"tr\")(29, \"th\");\n            i0.ɵɵtext(30, \"Date\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(31, \"th\");\n            i0.ɵɵtext(32, \"Barber\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(33, \"th\");\n            i0.ɵɵtext(34, \"Services\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(35, \"th\");\n            i0.ɵɵtext(36, \"Products\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(37, \"th\");\n            i0.ɵɵtext(38, \"Service \\u20B9\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(39, \"th\");\n            i0.ɵɵtext(40, \"Product \\u20B9\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(41, \"th\");\n            i0.ɵɵtext(42, \"Total \\u20B9\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(43, \"th\");\n            i0.ɵɵtext(44, \"Mode\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(45, \"tbody\");\n            i0.ɵɵtemplate(46, DashboardComponent_tr_46_Template, 20, 11, \"tr\", 11);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(47, DashboardComponent_button_47_Template, 2, 0, \"button\", 12);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"formGroup\", ctx.filterForm);\n            i0.ɵɵadvance(12);\n            i0.ɵɵproperty(\"ngForOf\", ctx.barbers);\n            i0.ɵɵadvance(5);\n            i0.ɵɵtextInterpolate1(\"Total Income: \\u20B9\", ctx.totalIncome, \"\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate1(\"Total Product Cost: \\u20B9\", ctx.totalProductCost, \"\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate1(\"Barber Commission (50%): \\u20B9\", ctx.barberCommission, \"\");\n            i0.ɵɵadvance(22);\n            i0.ɵɵproperty(\"ngForOf\", ctx.filteredTransactions);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.hasMore);\n          }\n        },\n        dependencies: [i3.NgForOf, i3.NgIf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i3.DatePipe],\n        styles: [\".dashboard-container[_ngcontent-%COMP%]{padding:1rem;font-family:Segoe UI,sans-serif}h2[_ngcontent-%COMP%]{margin-bottom:1rem;font-size:1.5rem}.filter-form[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:1rem;margin-bottom:1.5rem}.filter-form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{display:flex;flex-direction:column;font-size:.9rem}.filter-form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .filter-form[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{padding:4px 6px;font-size:.9rem;margin-top:.25rem;border:1px solid #ccc;border-radius:4px}.filter-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:6px 12px;font-size:.9rem;cursor:pointer;border:none;background-color:#2d7dd2;color:#fff;border-radius:4px}.summary-cards[_ngcontent-%COMP%]{display:flex;gap:1rem;flex-wrap:wrap;margin-bottom:1.5rem}.card[_ngcontent-%COMP%]{background-color:#f0f4f8;padding:1rem;border-radius:6px;box-shadow:0 1px 3px #0000001a;flex:1;min-width:150px}.table-wrapper[_ngcontent-%COMP%]{overflow-x:auto}table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;font-size:.9rem}th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{padding:8px 12px;border:1px solid #ccc;vertical-align:top}th[_ngcontent-%COMP%]{background-color:#f8f9fa;text-align:left}ul[_ngcontent-%COMP%]{margin:0;padding-left:1rem}.load-more[_ngcontent-%COMP%]{margin-top:1rem;padding:8px 16px;background-color:#333;color:#fff;border:none;border-radius:4px;cursor:pointer}@media (max-width: 768px){.filter-form[_ngcontent-%COMP%], .summary-cards[_ngcontent-%COMP%]{flex-direction:column}table[_ngcontent-%COMP%], thead[_ngcontent-%COMP%], tbody[_ngcontent-%COMP%], th[_ngcontent-%COMP%], td[_ngcontent-%COMP%], tr[_ngcontent-%COMP%]{font-size:.8rem}.load-more[_ngcontent-%COMP%]{width:100%}}\"]\n      });\n    }\n  }\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}