{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { BarberService } from '../../services/barber.service';\nimport { BookingService } from '../../services/booking.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/barber.service\";\nimport * as i3 from \"../../services/booking.service\";\nimport * as i4 from \"@angular/common\";\nfunction BookingFormComponent_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const barber_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", barber_r3._id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(barber_r3.name);\n  }\n}\nfunction BookingFormComponent_label_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"label\")(1, \"input\", 11);\n    i0.ɵɵlistener(\"change\", function BookingFormComponent_label_14_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.toggleCheckbox($event, \"selectedServices\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const service_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", service_r4._id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", service_r4.serviceName, \" \");\n  }\n}\nfunction BookingFormComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\")(2, \"input\", 12);\n    i0.ɵɵlistener(\"change\", function BookingFormComponent_div_18_Template_input_change_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const product_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.toggleProductCheckbox($event, product_r7));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 13);\n    i0.ɵɵlistener(\"input\", function BookingFormComponent_div_18_Template_input_input_4_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const product_r7 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.updateProductPrice(product_r7._id, $event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const product_r7 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"checked\", ctx_r2.isProductSelected(product_r7._id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", product_r7.productName, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r2.getProductPrice(product_r7._id))(\"disabled\", !ctx_r2.isProductSelected(product_r7._id));\n  }\n}\nexport let BookingFormComponent = /*#__PURE__*/(() => {\n  class BookingFormComponent {\n    constructor(fb, barberService, bookingService) {\n      this.fb = fb;\n      this.barberService = barberService;\n      this.bookingService = bookingService;\n      this.barbers = [];\n      this.services = [];\n      this.products = [];\n    }\n    ngOnInit() {\n      this.bookingForm = this.fb.group({\n        barber: ['', Validators.required],\n        date: ['', Validators.required],\n        selectedServices: [[]],\n        selectedProducts: [[]],\n        serviceAmount: ['', Validators.required],\n        paymentMode: ['cash', Validators.required]\n      });\n      this.loadBarbers();\n      this.loadServices();\n      this.loadProducts();\n    }\n    loadBarbers() {\n      this.barberService.getBarbers().subscribe(data => {\n        this.barbers = data;\n      });\n    }\n    loadServices() {\n      this.bookingService.getServices().subscribe(data => {\n        this.services = data;\n      });\n    }\n    loadProducts() {\n      this.bookingService.getProducts().subscribe(data => {\n        this.products = data;\n      });\n    }\n    toggleCheckbox(event, field) {\n      const formArray = this.bookingForm.get(field)?.value || [];\n      const value = event.target.value;\n      if (event.target.checked) {\n        // Add to array\n        this.bookingForm.get(field)?.setValue([...formArray, value]);\n      } else {\n        // Remove from array\n        const updatedArray = formArray.filter(item => item !== value);\n        this.bookingForm.get(field)?.setValue(updatedArray);\n      }\n      this.bookingForm.get(field)?.markAsDirty();\n    }\n    get selectedProducts() {\n      return this.bookingForm.get('selectedProducts');\n    }\n    toggleProductCheckbox(event, product) {\n      if (event.target.checked) {\n        this.selectedProducts.push(this.fb.group({\n          productId: [product._id],\n          productName: [product.productName],\n          perUsePrice: [product.perUsePrice]\n        }));\n      } else {\n        const index = this.selectedProducts.controls.findIndex(ctrl => ctrl.get('productId')?.value === product._id);\n        if (index !== -1) this.selectedProducts.removeAt(index);\n      }\n      this.updateTotalProductAmount();\n    }\n    getProductPrice(productId) {\n      const product = this.bookingForm.get('selectedProducts')?.value?.find(p => p._id === productId);\n      return product ? product.perUsePrice : 0;\n    }\n    isProductSelected(productId) {\n      const selectedProducts = this.bookingForm.get('selectedProducts')?.value;\n      return Array.isArray(selectedProducts) && selectedProducts.some(p => p._id === productId);\n    }\n    updateProductPrice(productId, event) {\n      const newPrice = event?.target?.value;\n      const control = this.selectedProducts.controls.find(ctrl => ctrl.get('productId')?.value === productId);\n      if (control) {\n        control.get('perUsePrice')?.setValue(Number(newPrice));\n        this.updateTotalProductAmount();\n      }\n    }\n    updateTotalProductAmount() {\n      const total = this.selectedProducts.controls.reduce((acc, ctrl) => {\n        return acc + Number(ctrl.get('perUsePrice')?.value || 0);\n      }, 0);\n      this.bookingForm.get('totalProductAmount')?.setValue(total);\n    }\n    onSubmit() {\n      if (this.bookingForm.valid) {\n        console.log('this.bookingForm.value', this.bookingForm.value);\n        this.bookingService.createBooking(this.bookingForm.value).subscribe(res => {\n          alert('Booking Created!');\n          // this.bookingForm.reset();\n        });\n      }\n    }\n\n    static {\n      this.ɵfac = function BookingFormComponent_Factory(t) {\n        return new (t || BookingFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.BarberService), i0.ɵɵdirectiveInject(i3.BookingService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: BookingFormComponent,\n        selectors: [[\"app-booking-form\"]],\n        decls: 36,\n        vars: 5,\n        consts: [[1, \"booking-form-container\"], [3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"barber\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"date\", \"formControlName\", \"date\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"number\", \"formControlName\", \"serviceAmount\"], [\"type\", \"radio\", \"value\", \"cash\", \"formControlName\", \"paymentMode\"], [\"type\", \"radio\", \"value\", \"online\", \"formControlName\", \"paymentMode\"], [\"type\", \"submit\"], [3, \"value\"], [\"type\", \"checkbox\", 3, \"value\", \"change\"], [\"type\", \"checkbox\", 3, \"checked\", \"change\"], [\"type\", \"number\", \"placeholder\", \"Per use price\", 3, \"value\", \"disabled\", \"input\"]],\n        template: function BookingFormComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n            i0.ɵɵtext(2, \"Book an Appointment\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"form\", 1);\n            i0.ɵɵlistener(\"ngSubmit\", function BookingFormComponent_Template_form_ngSubmit_3_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(4, \"label\");\n            i0.ɵɵtext(5, \"Barber:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"select\", 2);\n            i0.ɵɵtemplate(7, BookingFormComponent_option_7_Template, 2, 2, \"option\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"label\");\n            i0.ɵɵtext(9, \"Date:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(10, \"input\", 4);\n            i0.ɵɵelementStart(11, \"fieldset\")(12, \"legend\");\n            i0.ɵɵtext(13, \"Services\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(14, BookingFormComponent_label_14_Template, 3, 2, \"label\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"fieldset\")(16, \"legend\");\n            i0.ɵɵtext(17, \"Products\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(18, BookingFormComponent_div_18_Template, 5, 4, \"div\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(19, \"p\")(20, \"strong\");\n            i0.ɵɵtext(21, \"Total Product Price:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtext(22);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(23, \"label\");\n            i0.ɵɵtext(24, \"Amount:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(25, \"input\", 6);\n            i0.ɵɵelementStart(26, \"label\");\n            i0.ɵɵtext(27, \"Payment Mode:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(28, \"label\");\n            i0.ɵɵelement(29, \"input\", 7);\n            i0.ɵɵtext(30, \" Cash\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(31, \"label\");\n            i0.ɵɵelement(32, \"input\", 8);\n            i0.ɵɵtext(33, \" Online\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(34, \"button\", 9);\n            i0.ɵɵtext(35, \"Submit Booking\");\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"formGroup\", ctx.bookingForm);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngForOf\", ctx.barbers);\n            i0.ɵɵadvance(7);\n            i0.ɵɵproperty(\"ngForOf\", ctx.services);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngForOf\", ctx.products);\n            i0.ɵɵadvance(4);\n            i0.ɵɵtextInterpolate1(\" \", ctx.totalProductPrice, \"\");\n          }\n        },\n        dependencies: [i4.NgForOf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.RadioControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n        styles: [\".booking-form-container[_ngcontent-%COMP%]{max-width:600px;margin:2rem auto;padding:2rem;background-color:#fff;border-radius:12px;box-shadow:0 4px 20px #0000001a}.booking-form-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{text-align:center;margin-bottom:1.5rem;color:#333}.form-group[_ngcontent-%COMP%]{margin-bottom:1.2rem}label[_ngcontent-%COMP%]{display:block;font-weight:600;margin-bottom:.5rem;color:#444}input[type=text][_ngcontent-%COMP%], input[type=number][_ngcontent-%COMP%], input[type=date][_ngcontent-%COMP%], select[_ngcontent-%COMP%]{width:100%;padding:.6rem;border:1px solid #ccc;border-radius:6px;font-size:1rem;transition:border-color .3s ease}input[_ngcontent-%COMP%]:focus, select[_ngcontent-%COMP%]:focus{border-color:#3f51b5;outline:none}.checkbox-group[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:10px}.checkbox-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{display:flex;align-items:center;gap:6px;background-color:#f1f1f1;padding:.4rem .8rem;border-radius:6px;cursor:pointer;font-size:.95rem}button[_ngcontent-%COMP%]{display:block;width:100%;padding:.8rem;background-color:#3f51b5;color:#fff;border:none;border-radius:8px;font-size:1rem;font-weight:700;cursor:pointer;transition:background-color .3s ease}button[_ngcontent-%COMP%]:hover{background-color:#303f9f}@media (max-width: 600px){.booking-form-container[_ngcontent-%COMP%]{padding:1.5rem}}\"]\n      });\n    }\n  }\n  return BookingFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}