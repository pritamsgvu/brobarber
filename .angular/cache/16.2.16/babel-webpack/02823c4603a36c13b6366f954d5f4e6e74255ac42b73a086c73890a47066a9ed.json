{"ast":null,"code":"import { HttpClient, HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let DashboardService = /*#__PURE__*/(() => {\n  class DashboardService {\n    constructor(http) {\n      this.http = http;\n      this.api = 'http://localhost:5000/api';\n    }\n    getTransactions(skip = 0, limit = 10, from = '', to = '', barber = '') {\n      let params = new HttpParams().set('skip', skip).set('limit', limit);\n      if (from) params = params.set('from', from);\n      if (to) params = params.set('to', to);\n      if (barber) params = params.set('barber', barber);\n      return this.http.get(`${this.api}/transactions`, {\n        params\n      });\n    }\n    getBookings(page, pageSize, filters) {\n      let params = new HttpParams().set('page', page.toString()).set('pageSize', pageSize.toString());\n      if (filters.fromDate) {\n        params = params.set('fromDate', filters.fromDate);\n      }\n      if (filters.toDate) {\n        params = params.set('toDate', filters.toDate);\n      }\n      if (filters.barber) {\n        params = params.set('barber', filters.barber);\n      }\n      return this.http.get(this.api, {\n        params\n      });\n    }\n    getServices() {\n      return this.http.get(`${this.api}/services`);\n    }\n    getProducts() {\n      return this.http.get(`${this.api}/products`);\n    }\n    getBarbers() {\n      return this.http.get(`${this.api}/barbers`);\n    }\n    static {\n      this.ɵfac = function DashboardService_Factory(t) {\n        return new (t || DashboardService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: DashboardService,\n        factory: DashboardService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return DashboardService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}